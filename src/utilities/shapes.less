// ==============
// Shapes mixins
// ==============
//
// Examples:
// .size(500px, 300px);
// .square(100%);
// .circle(10px);
// .triangle(up, 10px, #ccc);
// .triangle(down, 10px, #ccc);
// .triangle(right, 10px, #ccc);
// .triangle(left, 10px, #ccc);
// -----------------------------------------------

// Size
// ----
// value: <length> | <percentage>
.size(@width, @height: false) {
    .size-inseption(@width, @height) {
        width: @width;
        height: @height;
    }
    .inseption(@width, @height) when not (@height = false) {
        .size-inseption(@width, @height);
    }
    .inseption(@width, @height) when (@height = false) {
        .size-inseption(@width, @width);
    }
    .inseption(@width, @height);
}

// Square
// ------
// value: <length> | <percentage>
.square(@size) {
  .size(@size, @size);
}

// Circle
// ------
// value: <length> | <percentage>
.circle(@size) {
    .size(@size, @size);
    -moz-border-radius: @size/2;
    -webkit-border-radius: @size/2;
    border-radius: @size/2;
}


// Triangle
// --------
.triangle(@direction, @size, @color) when (@direction = up) {
    width: 0;
    height: 0;
    border-left: @size solid transparent;
    border-right: @size solid transparent;
    border-bottom: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = down) {
    width: 0;
    height: 0;
    border-left: @size solid transparent;
    border-right: @size solid transparent;
    border-top: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = left) {
    width: 0;
    height: 0;
    border-top: @size solid transparent;
    border-bottom: @size solid transparent;
    border-right: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = right) {
    width: 0;
    height: 0;
    border-top: @size solid transparent;
    border-bottom: @size solid transparent;
    border-left: @size solid @color;
}