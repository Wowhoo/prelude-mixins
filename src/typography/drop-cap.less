//
// .drop-cap(2)
// .drop-cap(32px)
// .drop-cap(2em)
// .drop-cap(200%)
// .drop-cap(2, 3)
// .drop-cap(2, 3, 10px)
//
// .drop-cap-inline(2)
// .drop-cap-inline(32px)
// .drop-cap-inline(2em)
// .drop-cap-inline(200%)
// .drop-cap-inline(32px, 3)
// .drop-cap-inline(2, 3, 10px)
//
// 文字下沉
// .drop-cap用于段落元素首字下沉，.drop-cap-inline用于行内元素整个下沉

.drop-cap-inline(...) when (@support-old-ie) {
    _display: inline;
}
.drop-cap-inline(@context-line-height) {
    @lines: 2;
    @margin-right: (1em / 2);
    .drop-cap-inline(@context-line-height, @lines, @margin-right);
}
.drop-cap-inline(@context-line-height, @lines) {
    @margin-right: (1em / @lines);
    .drop-cap-inline(@context-line-height, @lines, @margin-right);
}
.drop-cap-inline(@context-line-height, @lines, @margin-right) {
    float: left;
    margin-right: @margin-right;
    font-size: unit(@lines) * 1em;
}
// TODO isnumber 函数也可以通过 `1px` 这样的输入
.drop-cap-inline(@context-line-height, @lines, @margin-right) when (isnumber(@context-line-height)) {
    line-height: @context-line-height;
}
.drop-cap-inline(@context-line-height, @lines, @margin-right) when (ispercentage(@context-line-height)), (isem(@context-line-height)) {
    line-height: @context-line-height;
}
.drop-cap-inline(@context-line-height, @lines, @margin-right) when (ispixel(@context-line-height)) {
    line-height: @context-line-height * @lines;
}

.drop-cap(@line-height) {
    @lines: 2;
    @margin-right: (1em / 2);
    .drop-cap(@line-height, @lines, @margin-right);
}
.drop-cap(@line-height, @lines) {
    @margin-right: (1em / @lines);
    .drop-cap(@line-height, @lines, @margin-right);
}
.drop-cap(@line-height, @lines, @margin-right) {
    overflow: hidden;       // 不能使用after和before伪元素清除浮动
    line-height: @line-height;
    &:first-letter {
        .drop-cap-inline(@line-height, @lines, @margin-right);
    }
}
.drop-cap(@line-height, @lines, @margin-right) when (@support-old-ie) {
    _zoom: 1;
}