// Center-align a block level element
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
// Clearfix
// @see http://nicolasgallagher.com/micro-clearfix-hack/
.mobile-clearfix() {
  .clearfix();
  &:last-child {
    float: none;
  }
}

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}
.clearfix() when (@support-old-ie) {
  *zoom: 1;
}
// hidden
// ==========================================================================
// Hide from both screenreaders and browsers
.hidden() {
  display: none !important;
  visibility: hidden;
}

// Hide only visually, but have it available for screenreaders: h5bp.com/v
.visually-hidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard: h5bp.com/p
  &.focusable:active,
  &.focusable:focus {
      clip: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      position: static;
      width: auto;
  }
}
.margin-rem(@value, @default-font-size: @default-font-size) {

	@length: length(@value);
	@default-value: unit(@default-font-size);
 
	.inseption(@value) when (@length = 1) {
		@rem-value: unit(unit(extract(@value, 1))/@default-value,rem);
	.margin-inseption(@rem-value)
	}
	.inseption(@value) when (@length = 2) {
		@rem-value: unit(unit(extract(@value, 1))/@default-value,rem) unit(unit(extract(@value, 2))/@default-value,rem);
	.margin-inseption(@rem-value)
	}
	.inseption(@value) when (@length = 3) {
		@rem-value: unit(unit(extract(@value, 1))/@default-value,rem) unit(unit(extract(@value, 2))/@default-value,rem) unit(unit(extract(@value, 3))/@default-value,rem);
	.margin-inseption(@rem-value)
	}
	.inseption(@value) when (@length = 4) {
		@rem-value: unit(unit(extract(@value, 1))/@default-value,rem) unit(unit(extract(@value, 2))/@default-value,rem) unit(unit(extract(@value, 3))/@default-value,rem) unit(unit(extract(@value, 4))/@default-value,rem);
	.margin-inseption(@rem-value)
	}
	.margin-inseption(@value) {
		 margin: @value;
	}
 
	.margin-inseption(@value);
	.inseption(@value);
}

.margin-top-rem(@value, @default-font-size: @default-font-size) {
	margin-top: @value;
	margin-top: unit(unit(@value)/unit(@default-font-size),rem);
}

.margin-right-rem(@value, @default-font-size: @default-font-size) {
	margin-right: @value;
	margin-right: unit(unit(@value)/unit(@default-font-size),rem);
}

.margin-bottom-rem(@value, @default-font-size: @default-font-size) {
	margin-bottom: @value;
	margin-bottom: unit(unit(@value)/unit(@default-font-size),rem);
}

.margin-left-rem(@value, @default-font-size: @default-font-size) {
	margin-left: @value;
	margin-left: unit(unit(@value)/unit(@default-font-size),rem);
}


.margin-em(@value, @context-font-size: @default-font-size) {
	@length: length(@value);
	@default-value: unit(@context-font-size);
 
	.inseption(@value) when (@length = 1) {
		@em-value: unit(unit(extract(@value, 1))/@default-value,em);
	.margin-inseption(@em-value)
	}
	.inseption(@value) when (@length = 2) {
		@em-value: unit(unit(extract(@value, 1))/@default-value,em) unit(unit(extract(@value, 2))/@default-value,em);
	.margin-inseption(@em-value)
	}
	.inseption(@value) when (@length = 3) {
		@em-value: unit(unit(extract(@value, 1))/@default-value,em) unit(unit(extract(@value, 2))/@default-value,em) unit(unit(extract(@value, 3))/@default-value,em);
	.margin-inseption(@em-value)
	}
	.inseption(@value) when (@length = 4) {
		@em-value: unit(unit(extract(@value, 1))/@default-value,em) unit(unit(extract(@value, 2))/@default-value,em) unit(unit(extract(@value, 3))/@default-value,em) unit(unit(extract(@value, 4))/@default-value,em);
	.margin-inseption(@em-value)
	}
 
	.margin-inseption(@value) {
		 margin: @value;
	}
	.inseption(@value);
}

.margin-top-em(@value, @context-font-size: @default-font-size) {
    margin-top: unit(unit(@value)/unit(@context-font-size),em);
}

.margin-right-em(@value, @context-font-size: @default-font-size) {
    margin-right: unit(unit(@value)/unit(@context-font-size),em);
}

.margin-bottom-em(@value, @context-font-size: @default-font-size) {
    margin-bottom: unit(unit(@value)/unit(@context-font-size),em);
}

.margin-left-em(@value, @context-font-size: @default-font-size) {
    margin-left: unit(unit(@value)/unit(@context-font-size),em);
}
.padding-rem(@value, @default-font-size: @default-font-size) {

    @length: length(@value);
    @default-value: unit(@default-font-size);
 
    .inseption(@value) when (@length = 1) {
        @rem-value: unit(unit(extract(@value, 1))/@default-value,rem);
    .padding-inseption(@rem-value)
    }
    .inseption(@value) when (@length = 2) {
        @rem-value: unit(unit(extract(@value, 1))/@default-value,rem) unit(unit(extract(@value, 2))/@default-value,rem);
    .padding-inseption(@rem-value)
    }
    .inseption(@value) when (@length = 3) {
        @rem-value: unit(unit(extract(@value, 1))/@default-value,rem) unit(unit(extract(@value, 2))/@default-value,rem) unit(unit(extract(@value, 3))/@default-value,rem);
    .padding-inseption(@rem-value)
    }
    .inseption(@value) when (@length = 4) {
        @rem-value: unit(unit(extract(@value, 1))/@default-value,rem) unit(unit(extract(@value, 2))/@default-value,rem) unit(unit(extract(@value, 3))/@default-value,rem) unit(unit(extract(@value, 4))/@default-value,rem);
    .padding-inseption(@rem-value)
    }
    .padding-inseption(@value) {
         padding: @value;
    }
 
    .padding-inseption(@value);
    .inseption(@value);
}

.padding-top-rem(@value, @default-font-size: @default-font-size) {
    padding-top: @value;
    padding-top: unit(unit(@value)/unit(@default-font-size),rem);
}

.padding-right-rem(@value, @default-font-size: @default-font-size) {
    padding-right: @value;
    padding-right: unit(unit(@value)/unit(@default-font-size),rem);
}

.padding-bottom-rem(@value, @default-font-size: @default-font-size) {
    padding-bottom: @value;
    padding-bottom: unit(unit(@value)/unit(@default-font-size),rem);
}

.padding-left-rem(@value, @default-font-size: @default-font-size) {
    padding-left: @value;
    padding-left: unit(unit(@value)/unit(@default-font-size),rem);
}


.padding-em(@value, @context-font-size: @default-font-size) {
    @length: length(@value);
    @default-value: unit(@context-font-size);
 
    .inseption(@value) when (@length = 1) {
        @em-value: unit(unit(extract(@value, 1))/@default-value,em);
    .padding-inseption(@em-value)
    }
    .inseption(@value) when (@length = 2) {
        @em-value: unit(unit(extract(@value, 1))/@default-value,em) unit(unit(extract(@value, 2))/@default-value,em);
    .padding-inseption(@em-value)
    }
    .inseption(@value) when (@length = 3) {
        @em-value: unit(unit(extract(@value, 1))/@default-value,em) unit(unit(extract(@value, 2))/@default-value,em) unit(unit(extract(@value, 3))/@default-value,em);
    .padding-inseption(@em-value)
    }
    .inseption(@value) when (@length = 4) {
        @em-value: unit(unit(extract(@value, 1))/@default-value,em) unit(unit(extract(@value, 2))/@default-value,em) unit(unit(extract(@value, 3))/@default-value,em) unit(unit(extract(@value, 4))/@default-value,em);
    .padding-inseption(@em-value)
    }
 
    .padding-inseption(@value) {
         padding: @value;
    }
    .inseption(@value);
}

.padding-top-em(@value, @context-font-size: @default-font-size) {
    padding-top: unit(unit(@value)/unit(@context-font-size),em);
}

.padding-right-em(@value, @context-font-size: @default-font-size) {
    padding-right: unit(unit(@value)/unit(@context-font-size),em);
}

.padding-bottom-em(@value, @context-font-size: @default-font-size) {
    padding-bottom: unit(unit(@value)/unit(@context-font-size),em);
}

.padding-left-em(@value, @context-font-size: @default-font-size) {
    padding-left: unit(unit(@value)/unit(@context-font-size),em);
}